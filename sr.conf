[General]
bypass-system = true
# 跳过代理。此选项强制这些域名或IP的连接范围由Shadowrocket TUN接口来处理，而不是Shadowrocket代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com,www.baidu.com
# TUN旁路路由。Shadowrocket TUN接口只能处理TCP协议。使用此选项可以绕过指定的IP范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32
# DNS覆写。使用普通DNS或加密DNS（如doh、doq、dot等）覆盖默认的系统DNS。有些dns over https支持http3，所以尝试查询，如果支持就切换到http3，可在doh链接后面加上#no-h3关闭。doh强制通过h3查询的写法是将“https”改成“h3”，如h3://dns.alidns.com/dns-query。
dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,223.5.5.5,119.29.29.29
# 备用DNS。当覆写DNS查询失败或查询时间超过2秒，Shadowrocket会自动回退备用DNS。如需指定多个DNS，可用逗号分隔。system表示回退到系统DNS。
fallback-dns-server = system
# 启用IPv6支持。false表示不启用，true表示启用。（注：即使不启用此选项，当本地网络环境支持IPv6，并且节点域名支持IPv6解析，Shadowrocket也会使用节点的IPv6地址进行访问。解决方法是关闭节点域名的IPv6解析，或者在配置文件的[Host]项目下为节点域名指定IP地址。）
ipv6 =true
# 首选IPv6。优先向IPv6的DNS服务器查询AAAA记录，优先使用AAAA记录。false表示不启用。
prefer-ipv6 = false
# 直连的域名类规则使用系统dns进行查询。false表示不启用。
dns-direct-system = false
# ping数据包自动回复。
icmp-auto-reply = true
# 不开启时，「重写的REJECT策略」默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false
# 私有IP应答。如果不启用此选项，域名解析返回私有IP，Shadowrocket会认为该域名被劫持而强制使用代理。
private-ip-answer = true
# 直连域名解析失败后使用代理。false表示不启用。
dns-direct-fallback-proxy = false 
# DNS劫持。有些设备或软件总是使用硬编码的DNS服务器，例如Netflix通过Google DNS(8.8.8.8或8.8.4.4)发送请求，您可以使用此选项来劫持查询。
hijack-dns = 8.8.8.8:53,8.8.4.4:53
# 当UDP流量匹配到规则里不支持UDP转发的节点策略时重新选择回退行为，可选行为包括DIRECT、REJECT。DIRECT表示直连转发UDP流量，REJECT表示拒绝转发UDP流量。
udp-policy-not-supported-behaviour = REJECT
  
[Proxy Group]
# 代理分组类型：
# select:手动切换节点。
# url-test:自动切换延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。
# ----------
# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 保留节点名称含有关键词A或B的节点:
# A|B
# 排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A).)^((?!(B)).)*$
# ----------
# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。
# ----------
# 不含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称，select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 开启订阅筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),订阅名称(多个订阅时,用逗号分隔),use=true,policy-regex-filter=正则式或关键词筛选(省略该参数时,表示匹配对应订阅的全部节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
🇭🇰 香港节点 = url-test, policy-regex-filter=(?=.*(港|HK|Hong Kong))^((?!(日|JP|Japan|美|US|United States)).)*$, url=http://www.gstatic.com/generate_204, interval=300, tolerance=50
🇯🇵 日本节点 = url-test, policy-regex-filter=(?=.*(日|JP|Japan))^((?!(港|HK|Hong Kong|美|US|United States)).)*$, url=http://www.gstatic.com/generate_204, interval=300, tolerance=50
🇺🇲 美国节点 = url-test, policy-regex-filter=(?=.*(美|US|United States))^((?!(港|HK|Hong Kong|日|JP|Japan)).)*$, url=http://www.gstatic.com/generate_204, interval=300, tolerance=50
# 🛑 广告拦截 = select, REJECT, DIRECT
# 🎯 国内流量 = select, DIRECT
📹 YouTube = select, 🇺🇲 美国节点, 🇯🇵 日本节点, 🇭🇰 香港节点
🔍 Google = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点
📹 HBO = select, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇯🇵 日本节点
🎥 Netflix = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点
🎥 DisneyPlus = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点
🍎 AppleTV = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点, DIRECT
🤖 OpenAI = select, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇯🇵 日本节点
# 🤖 Claude = select, 🇺🇲 美国节点
🎵 Spotify = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点
🎵 TikTok = select, 🇯🇵 日本节点, 🇺🇲 美国节点
📲 Telegram = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点
🍎 苹果服务 = select, DIRECT, 🇯🇵 日本节点, 🇭🇰 香港节点, 🇺🇲 美国节点
🧑‍💻 Dev = select, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇭🇰 香港节点
Ⓜ️ OneDrive = select, 🇯🇵 日本节点, 🇭🇰 香港节点, 🇺🇲 美国节点, DIRECT
Ⓜ️ 微软服务 = select, DIRECT, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点
# 🎮 SteamCN = select, DIRECT
🎮 游戏平台 = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点, DIRECT
🔞 Custom = select, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇯🇵 日本节点
🌍 国外网站 = select, 🇯🇵 日本节点, 🇭🇰 香港节点, 🇺🇲 美国节点
# 🐟 漏网之鱼 = select, 🇭🇰 香港节点, 🇺🇲 美国节点, 🇯🇵 日本节点, DIRECT

[Rule]
# 规则类型：
# DOMAIN-SUFFIX：匹配请求域名的后缀。如“DOMAIN-SUFFIX,example.com,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN-KEYWORD：匹配请求域名的关键词。如“DOMAIN-KEYWORD,exa,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN：匹配请求的完整域名。如“DOMAIN,www.example.com,DIRECT”只能匹配到“www.example.com”。
# USER-AGENT：匹配用户代理字符串，支持使用通配符“*”。如“USER-AGENT,MicroMessenger*,DIRECT”可以匹配到“MicroMessenger Client”。
# URL-REGEX：匹配URL正则式。如“URL-REGEX,^https?://.+/item.+,REJECT”可以匹配到“https://www.example.com/item/abc/123”。
# IP-CIDR：匹配IPv4或IPv6地址。如“IP-CIDR,192.168.1.0/24,DIRECT”可以匹配到IP段“192.168.1.1～192.168.1.254”。当域名请求遇到IP类规则时，Shadowrocket会向本地DNS服务器发送查询请求，以判断主机IP是否匹配规则。若IP类规则加“no-resolve”(如：IP-CIDR,172.16.0.0/12,DIRECT,no-resolve)，则域名请求将会跳过此规则，不会触发本地DNS查询。
# IP-ASN：匹配IP地址隶属的ASN编号。如"IP-ASN,56040,DIRECT"可以匹配到属于China Mobile Communications Corporation网络的IP地址。
# RULE-SET：匹配规则集内容。规则集的内容需包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list"。（兼容仅包含IP地址且不带规则类型的规则集）
# DOMAIN-SET：匹配域名集内容。域名集的内容不包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple_Domain.list"。
# SCRIPT：匹配脚本名称。
# DST-PORT：匹配目标主机名的端口号。如“DST-PORT,443,DIRECT”可以匹配到443目标端口。
# GEOIP：匹配IP数据库。如“GEOIP,CN,DIRECT”可以匹配到归属地为CN的IP地址。
# FINAL：兜底策略。如“FINAL,PROXY”表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
# AND：逻辑规则，与规则。如“AND,((DOMAIN,www.example.com),(DST-PORT,123)),DIRECT”可以匹配到“www.example.com:123”。
# NOT：逻辑规则，非规则。如“NOT,((DST-PORT,123)),DIRECT”可以匹配到除了“123”端口的其他所有请求。
# OR：逻辑规则，或规则。如“OR,((DST-PORT,123),(DST-PORT,456)),DIRECT”可以匹配到“123”或“456”端口的所有请求。
# ----------
# 规则策略：
# PROXY：代理。通过代理服务器转发流量。
# DIRECT：直连。连接不经过任何代理服务器。
# REJECT：拒绝。返回HTTP状态码404，没有内容。
# REJECT-DICT：拒绝。返回HTTP状态码200，内容为空的JSON对象。
# REJECT-ARRAY：拒绝。返回HTTP状态码200，内容为空的JSON数组。
# REJECT-200：拒绝。返回HTTP状态码200，没有内容。
# REJECT-IMG：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-TINYGIF：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-DROP：拒绝。丢弃IP包。
# REJECT-NO-DROP：拒绝。返回ICMP端口不可达。
# 除此之外，规则策略还可以选择「代理分组」、「订阅名称」、「分组」、「节点」。
# ----------
# 规则匹配的优先级：
# 1.模块规则优先于配置文件规则。
# 2.规则从上到下依次匹配。
# 3.域名规则优先于IP规则。
# ----------
# 关于屏蔽443端口的UDP流量的解释内容：HTTP3/QUIC协议开始流行，但是国内ISP和国际出口的UDP优先级都很低，表现很差，屏蔽掉以强制回退HTTP2/HTTP1.1。（如需启用该逻辑规则，请删除AND前面的注释符号#）
# AND,((PROTOCOL,UDP),(DST-PORT,443)),REJECT-NO-DROP
# ----------
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Advertising/Advertising.list,REJECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMax/ChinaMax.list,DIRECT
# 本地局域网地址的规则集。
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Lan/Lan.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list,DIRECT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list,📹 YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list,🔍 Google
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/HBO/HBO.list,📹 HBO
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Netflix/Netflix.list,🎥 Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Disney/Disney.list,🎥 DisneyPlus
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/AppleTV/AppleTV.list,🍎 AppleTV
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list,🤖 OpenAI
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Claude/Claude.list,🇺🇲 美国节点
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list,🎵 Spotify
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/TikTok/TikTok.list,🎵 TikTok
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list,📲 Telegram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list,🧑‍💻 Dev
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OneDrive/OneDrive.list,Ⓜ️ OneDrive
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Microsoft/Microsoft.list,Ⓜ️ 微软服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Game/Game.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/alwzying/CustomizedClashRules/main/Custom_sr.list,🔞 Custom
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Global/Global.list,🌍 国外网站
# 表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
FINAL,PROXY

[Host]
# 域名指定本地值：
# example.com=1.2.3.4
# 域名指定DNS服务器：
# example.com=server:1.2.3.4
# wifi名称指定DNS服务器，如需指定多个DNS，可用逗号分隔：
# ssid:wifi名称=server:1.2.3.4
# ----------
*.apple.com=server:system
*.icloud.com=server:system
localhost = 127.0.0.1

[URL Rewrite]
# Google搜索引擎防跳转的重写。
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302

[MITM]
# Shadowrocket仅会解密hostname指定的域名的请求，可以使用通配符。也可以使用前缀 - 排除特定主机名，如 -*.example.com。iOS系统和某些应用有严格的安全策略，仅信任某些特定的证书，对这些域名启动解密可能导致问题，如 *.apple.com，*.icloud.com。
hostname = *.google.cn
